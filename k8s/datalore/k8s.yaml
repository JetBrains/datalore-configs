apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: datalore-on-premise
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "delete", "get", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create", "delete", "get", "list", "deletecollection"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: datalore-on-premise
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: datalore-on-premise
roleRef:
  kind: Role
  name: datalore-on-premise
  apiGroup: ""
subjects:
  - kind: ServiceAccount
    name: datalore-on-premise
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: datalore-on-premise
spec:
  serviceName: datalore-on-premise
  selector:
    matchLabels:
      app: datalore-on-premise
  template:
    metadata:
      labels:
        app: datalore-on-premise
    spec:
      serviceAccountName: datalore-on-premise
      securityContext:
        fsGroup: 5000
      imagePullSecrets:
        - name: regcred
      containers:
        - name: datalore
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8081
              name: http-internal
            - containerPort: 10201
              name: debug
            - containerPort: 5050
              name: agents-manager
            - containerPort: 5060
              name: computation
          livenessProbe:
            initialDelaySeconds: 120
            httpGet:
              path: /health
              port: http
          resources:
            requests:
              memory: "4096Mi"
            limits:
              memory: "4096Mi"
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datalore-on-premise-db
                  key: ROOT_PASSWORD
          envFrom:
            - configMapRef:
                name: datalore-shared
          volumeMounts:
            - mountPath: /etc/datalore/agents-config
              name: agents-config
            - mountPath: /etc/datalore/environment_info
              name: envs
            - mountPath: /etc/datalore/databases
              name: databases-configs
            - mountPath: /etc/datalore/logback-config
              name: logback-config
            - mountPath: /etc/datalore/plans-config
              name: plans-config
            - mountPath: /home/storage
              name: storage
            - mountPath: /etc/datalore/env.sh
              name: secret-env
              subPath: user_secret_env.sh
        - name: postgres
          securityContext:
            runAsUser: 999
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: datalore-shared
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/db-data
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datalore-on-premise-db
                  key: ROOT_PASSWORD
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datalore-on-premise-db
                  key: ROOT_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-data
      volumes:
        - name: agents-config
          configMap:
            name: datalore-on-premise-agents-config
        - name: logback-config
          configMap:
            name: datalore-on-premise-logback-config
        - name: plans-config
          configMap:
            name: datalore-on-premise-plans-config
        - name: envs
          configMap:
            name: datalore-on-premise-envs
        - name: databases-configs
          configMap:
            name: datalore-on-premise-databases-configs
        - name: secret-env
          secret:
            secretName: datalore-user-config
---
apiVersion: v1
kind: Service
metadata:
  name: datalore-on-premise
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    - port: 8081
      targetPort: http-internal
      protocol: TCP
      name:  http-internal
    - port: 5050
      targetPort: agents-manager
      protocol: TCP
      name: agents-manager
    - port: 5060
      targetPort: computation
      protocol: TCP
      name: computation
  selector:
    app: datalore-on-premise
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: datalore-shared
data:
  DB_PORT: "5432"
  DB_USER: "admin"

  DB_NAME_JETTY: "dataloreJetty"
  DB_USER_JETTY: "jetty"

  DB_NAME_CORE: "datalore"
  DB_NAME_INFRA: "dataloreInfra"
