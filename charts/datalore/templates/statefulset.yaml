apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "datalore.fullname" . }}
  labels:
    {{- include "datalore.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "datalore.fullname" . }}
  selector:
    matchLabels:
      {{- include "datalore.selectorLabels" . | nindent 6 }}
  {{- with .Values.volumeClaimTemplates }}
  volumeClaimTemplates:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "datalore.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "datalore.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: datalore
          securityContext:
            {{- toYaml .Values.dataloreSecurityContext | nindent 12 }}
          image: "{{ .Values.serverImage.repository }}:{{ .Values.dataloreVersion | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.serverImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
            - name: http-internal
              containerPort: 8081
            - name: agents-manager
              containerPort: 5050
            - name: computation
              containerPort: {{ .Values.computationPort }}
          livenessProbe:
            initialDelaySeconds: 120
            httpGet:
              path: /health
              port: http
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datalore.databaseSecretName" . }}
                  key: {{ quote .Values.databaseSecret.key }}
            - name: DATABASES_CONNECTION_CHECKER_K8S_YAML
              value: file:///opt/datalore/configs/databases/connection_checker.yaml
            - name: DATABASES_INTROSPECTION_K8S_YAML
              value: file:///opt/datalore/configs/databases/introspection.yaml
            - name: DATABASES_NAMESPACES_LOADER_K8S_YAML
              value: file:///opt/datalore/configs/databases/namespaces_loader.yaml
            - name: SQL_SESSION_K8S_YAML
              value: file:///opt/datalore/configs/databases/sql_session.yaml
            {{- if .Values.plansConfig }}
            - name: DATALORE_PLANS_CONFIGURATION
              value: file:///opt/datalore/configs/plans_config.yaml
            {{- end }}
            - name: SQL_CELLS_API_HOST
              value: {{ .Values.sqlCellsApiHost | default "datalore" | quote }}
            - name: SQL_CELLS_API_PORT
              value: {{ .Values.sqlCellsApiPort | default "8081" | quote }}
            {{- if .Values.external.enabled }}
            - name: EXTERNAL_SERVER_URL
              value: {{ .Values.external.serverUrl | default "http://127.0.0.1:8111" }}
            - name: EXTERNAL_USER
              value: {{ .Values.external.user | default "" }}
            - name: EXTERNAL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datalore.fullname" . }}-external
                  key: EXTERNAL_PASSWORD
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "datalore.fullname" . }}-user-env
            {{- if .Values.dataloreEnvExternalSecret }}
            - secretRef:
                name: {{ .Values.dataloreEnvExternalSecret }}
            {{- end }}
          volumeMounts:
            - mountPath: /opt/datalore/configs/agents-config.yaml
              name: agents-config
              subPath: agents-config.yaml
            - mountPath: /opt/datalore/configs/databases
              name: databases-configs
            - mountPath: /opt/datalore/jetty/resources/logback.xml
              name: logback-config
              subPath: logback.xml
            - mountPath: /opt/data
              name: storage
            {{- if .Values.customEnvs }}
            - mountPath: /opt/datalore/configs/environment_info
              name: envs
            {{- end }}
            {{- if .Values.plansConfig }}
            - mountPath: /opt/datalore/configs/plans_config.yaml
              name: plans-config
              subPath: plans_config.yaml
            {{- end }}
          resources:
            {{- toYaml .Values.dataloreResources | nindent 12 }}
        {{- if .Values.internalDatabase }}
        - name: postgres
          securityContext:
            {{- toYaml .Values.postgresSecurityContext | nindent 12 }}
          image: "{{ .Values.postgresImage.repository }}:{{ .Values.dataloreVersion | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.postgresImage.pullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/db-data
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datalore.databaseSecretName" . }}
                  key: {{ quote .Values.databaseSecret.key }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-data
          resources:
            {{- toYaml .Values.postgresResources | nindent 12 }}
        {{- end }}
        {{- if .Values.external.enabled }}
        - name: external-server
          securityContext:
            {{- toYaml .Values.externalSecurityContext | nindent 12 }}
          image: "{{ .Values.externalImage.repository }}:{{ .Values.dataloreVersion | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.externalImage.pullPolicy }}
          readinessProbe:
            httpGet:
              path: /login.html
              port: external-server
            initialDelaySeconds: 20
          ports:
            - name: external-server
              containerPort: 8111
          volumeMounts:
            - mountPath: /data/volume
              name: external
            - mountPath: /opt/bazel/license.keys
              name: external-license
              subPath: license.keys
          env:
            - name: DEFAULT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datalore.fullname" . }}-db
                  key: ROOT_PASSWORD
            - name: EXTERNAL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datalore.fullname" . }}-external
                  key: EXTERNAL_PASSWORD
        {{- end }}
      volumes:
        - name: agents-config
          configMap:
            name: {{ include "datalore.fullname" . }}-agents-config
        - name: logback-config
          configMap:
            name: {{ include "datalore.fullname" . }}-logback-config
        {{- if .Values.customEnvs }}
        - name: envs
          configMap:
            name: {{ include "datalore.fullname" . }}-envs-config
        {{- end }}
        {{- if .Values.plansConfig }}
        - name: plans-config
          configMap:
            name: {{ include "datalore.fullname" . }}-plans-config
        {{- end }}
        - name: databases-configs
          configMap:
            name: {{ include "datalore.fullname" . }}-databases-config
        {{- if .Values.external.enabled }}
        - name: external-license
          secret:
            secretName: {{ include "datalore.fullname" . }}-external-license
        {{- end }}
        {{- if .Values.volumes }}
        {{- toYaml .Values.volumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
